import useAuthStore from '../../auth/store/useAuthStore';
import type { UserProfile } from '../services/profileService';

interface InterestsSectionProps {
  profile: UserProfile | undefined;
}

const InterestsSection = ({ profile }: InterestsSectionProps) => {
  const { user } = useAuthStore();
  const isStudent = user?.role === 'ROLE_USER';
  const isEmpty =
    !profile?.interests ||
    profile.interests.length === 0 ||
    (profile.interests.length === 1 && profile.interests[0] === '');

  // Funci√≥n para obtener emoji basado en palabras clave
  const getEmojiForInterest = (interest: string) => {
    const lowerInterest = interest.toLowerCase();

    const emojiMap = {
      // Carrera/Trabajo
      'primer empleo': 'üöÄ',
      empleo: 'üíº',
      trabajo: 'üíº',
      carrera: 'üöÄ',
      entrevista: 'üéØ',
      transici√≥n: 'üîÑ',
      cv: 'üìÑ',
      resume: 'üìÑ',
      networking: 'ü§ù',

      // Tecnolog√≠a
      react: '‚öõÔ∏è',
      javascript: 'üü®',
      python: 'üêç',
      web: 'üåê',
      frontend: 'üé®',
      backend: '‚öôÔ∏è',
      ecosistema: 'üåê',
      desarrollo: 'üíª',
      programaci√≥n: 'üíª',
      c√≥digo: 'üíª',
      node: 'üü¢',
      angular: 'üî¥',
      vue: 'üíö',
      css: 'üé®',
      html: 'üìÑ',
      docker: 'üê≥',
      kubernetes: '‚ò∏Ô∏è',
      aws: '‚òÅÔ∏è',
      azure: '‚òÅÔ∏è',
      cloud: '‚òÅÔ∏è',

      // Soft skills y otros
      comunicaci√≥n: 'üí¨',
      liderazgo: 'üëë',
      teamwork: 'ü§ù',
      equipo: 'ü§ù',
      creatividad: 'üí°',
      innovaci√≥n: 'üí°',
      'problem solving': 'üß©',
      resoluci√≥n: 'üß©',
      dise√±o: 'üé®',
      ux: 'üé®',
      ui: 'üé®',
      data: 'üìä',
      'machine learning': 'ü§ñ',
      ai: 'ü§ñ',
      'inteligencia artificial': 'ü§ñ',
      blockchain: '‚õìÔ∏è',
      devops: 'üîß',
      testing: 'üß™',
      qa: 'üß™',
    };

    // Buscar coincidencias en el texto
    for (const [keyword, emoji] of Object.entries(emojiMap)) {
      if (lowerInterest.includes(keyword)) {
        return emoji;
      }
    }

    return '‚ú®'; // Default
  };

  // Funci√≥n para obtener color consistente por inter√©s
  const getInterestColor = (interest: string) => {
    const colors = [
      'bg-purple-100 text-purple-700 border-purple-200',
      'bg-green-100 text-green-700 border-green-200',
      'bg-blue-100 text-blue-700 border-blue-200',
      'bg-orange-100 text-orange-700 border-orange-200',
      'bg-pink-100 text-pink-700 border-pink-200',
      'bg-indigo-100 text-indigo-700 border-indigo-200',
    ];

    let hash = 0;
    for (let i = 0; i < interest.length; i++) {
      hash = interest.charCodeAt(i) + ((hash << 5) - hash);
    }

    return colors[Math.abs(hash) % colors.length];
  };

  return (
    <div className="bg-white rounded-xl shadow-lg p-5 mb-4 font-Inter">
      <h2 className="text-xl font-bold text-gray-900 font-Inter mb-4">
        Intereses
      </h2>

      {isEmpty ? (
        <div className="text-center py-8 text-gray-400">
          <div className="mb-4">
            <div className="w-16 h-16 mx-auto mb-3 rounded-full bg-gray-100 flex items-center justify-center">
              <span className="text-2xl">‚ú®</span>
            </div>
          </div>
          {isStudent ? (
            <>
              <p className="text-sm">
                Comparte qu√© te interesa aprender para conectar con mentores
                afines.
              </p>
              <p className="text-xs mt-2">
                React, Primer empleo, Frontend development, etc.
              </p>
            </>
          ) : (
            <>
              <p className="text-sm">
                Comparte en qu√© temas puedes ayudar como mentor.
              </p>
              <p className="text-xs mt-2">
                Transici√≥n de carrera, Entrevistas t√©cnicas, Liderazgo, etc.
              </p>
            </>
          )}
        </div>
      ) : (
        <div className="flex flex-wrap gap-2">
          {profile.interests
            .filter((interest) => interest && interest.trim() !== '') // Filtrar intereses vac√≠os
            .map((interest) => (
              <span
                key={interest}
                className={`inline-flex items-center gap-2 px-3 py-1 rounded-full text-sm font-medium border ${getInterestColor(interest)}`}
              >
                <span className="text-base">
                  {getEmojiForInterest(interest)}
                </span>
                {interest}
              </span>
            ))}
        </div>
      )}
    </div>
  );
};

export default InterestsSection;
